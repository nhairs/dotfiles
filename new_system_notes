# Standard update stuff
sudo apt update & sudo apt upgrade

# Install packages
sudo apt install \
    zsh \
    git \
    i3 \
    python3-pip \
    nitrogen \
    blueman \
    neovim \
    rcm \
    arandr \
    htop \
    tldr \
    tree \
    silversearcher-ag \
    jq \
    mtr \
    nmap \
    whois \
    ipcalc

# https://bugs.launchpad.net/pinta/+bug/1786822/comments/21
sudo snap install pinta

# t14 gen 2 on ubuntu 20.04
# install wifi driver
mkdir -p ~/git/extern
cd ~/git/extern
git clone https://github.com/lwfinger/rtw89.git -b v7
cd rtw89
make
sudo make sign-install
sudo cp suspend_rtw89 /usr/lib/systemd/system-sleep
sudo modprobe rtw89pci

# dotfiles
git clone https://github.com/nhairs/dotfiles
RCRC=~/dotfiles/rcrc rcup -d ~/dotfiles -v

# Change shell
chsh
# /bin/zsh

# EXIT AND START i3 AND THEN OPEN NEW SHELL (which will be zsh)

# this will then also do things like install virtualenv

# enable ssh-agent
systemctl --user enable --now ssh-agent

# setup neovim
virtualenv -p python3 ~/virtual_envs/neovim3
source ~/virtual_envs/neovim3/bin/activate
pip install pynvim neovim
deactivate

# run neovim
# MAKE SURE TO WAIT FOR IT TO FINISH INSTALLING ON FIRST RUN
vim

# Install other utilities
# make sure that pip is python3-pip
pip3 install --user \
    udiskie \
    pulsemixer \
    mycli \
    grip \
    awscli

# install light (backlightchanger)
#cd ~/git/extern
#git clone https://github.com/haikarainen/light.git
cd /tmp
wget https://github.com/haikarainen/light/releases/download/v1.2/light_1.2_amd64.deb
sudo dpkg -i light_1.2_amd64.deb
sudo usermod -a -G video $USER

# Install google cli
# https://cloud.google.com/sdk/docs/install#deb
# echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
# curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
# sudo apt update && sudo apt install google-cloud-cli
# gcloud init

# Make directories
mkdir ~/Pictures/capture

# Update mono (if using < 20.04 and pinta crashing)
# https://www.mono-project.com/download/stable/#download-lin


# xterm shit
# sudo ln -sf /usr/share/terminfo/x/xterm-color /usr/share/terminfo/x/xterm-256color


# tablet stuff
# sudo apt install xserver-xorg-input-wacom-hwe-18.04
# xsetwacom --set <N> MapToOutput <output>
# https://krita.org/en/download/krita-desktop/
#
# https://github.com/xournalpp/xournalpp#ubuntu-and-derivatives
# sudo add-apt-repository ppa:apandada1/xournalpp-stable
# sudo apt update
# sudo apt install xournalpp


## work
#barracudavpn
#crowdstrike

# Zoom
update_zoom  # is an alias now :D

# Install Docker
# https://docs.docker.com/engine/install/ubuntu/#set-up-the-repository
sudo apt-get update
sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
# allow my user to use docker - requires restart of i3 (logout/login)
sudo usermod -a -G docker $USER
# Set sane defaults
sudo tee /etc/docker/daemon.json <<EOT
{
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "50m",
    "max-file": "3"
  },
  "default-address-pools" : [
      {
          "scope": "global",
          "base": "192.168.128.0/20",
          "size": 26
      }
  ]
}
EOT
sudo systemctl restart docker
systemctl status docker

# Install docker-compose
# https://docker-docs.netlify.app/compose/install/#install-compose
# NOTE: check for newer versions
sudo curl -L https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
# https://docker-docs.netlify.app/compose/completion/#zsh
#

# Golang
# https://go.dev/doc/install
wget -P /tmp https://go.dev/dl/go1.18.1.linux-amd64.tar.gz
sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf /tmp/go1.18.1.linux-amd64.tar.gz

# Wireshark
# make sure to allow select "allow users to capture"
sudo apt install wireshark
# allow my user to capture - requires restart of i3 (logout/login)
sudo usermod -a -G wireshark $USER
